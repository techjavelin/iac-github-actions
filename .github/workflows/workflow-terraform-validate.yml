---
name: techjavelin/iac-github-actions // terraform // validate

on:
  workflow_call:
    inputs:
      runner:
        description: "Where the job should run (e.g. 'self-hosted', 'ubuntu-latest', etc)"
        required: true
        type: string
        default: 'ubuntu-latest'

      source_dir:
        description: "Relative path from project root to where your terraform files are"
        required: false
        type: string
        default: '.'

    outputs:
      init:
        description: "Initialization Output"
        value: ${{ jobs.plan.outputs.init }}

      format:
        description: "Formatting Results"
        value: ${{ jobs.validate.outputs.outcome }}

      format_files:
        description: "Files formatted"
        value: ${{ jobs.validate.outputs.details }}

      validate:
        description: "Validation Results"
        value: ${{ jobs.validate.outputs.validation }}

jobs:
  validate:
    name: terraform // valdate
    runs-on: ${{ inputs.runner }}

    outputs:
      validation: ${{ steps.validate.outcome }}
      outcome: ${{ steps.format.outcome }}
      details: ${{ steps.format.outputs.stdout }}

    steps:
      - uses: actions/checkout@v3

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Setup
        id: init
        run: terraform -chdir=${{ inputs.source_dir }} init -backend=false

      - name: Format
        id: format
        run: terraform -chdir=${{ inputs.source_dir }} fmt -no-color -recursive

      - name: Validate
        id: validate
        run: terraform -chdir=${{ inputs.source_dir }} validate -no-color

  terraform_lint:
    name: terraform // lint
    runs-on: ${{ inputs.runner }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v2
        with:
          tflint_version: v0.38.1

      - name: Initialize TFLint
        run: tflint --init
        working-directory: ${{ inputs.source_dir }}

      - name: Lint Terraform
        run: tflint -f compact
        working-directory: ${{ inputs.source_dir }}
